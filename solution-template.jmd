---
title: "BEE 4750/5750 Homework 0"
author: "Jing-Shan Hsu (jh2226)"
date: `j import Dates; Dates.Date(Dates.now())`
weave_options:
  term: true
  results: tex
  cache: off
---

<!-- This setups the environment and installs packages, but doesn't appear in the generated document -->
<!-- You shouldn't need to modify this -->
```julia; echo = false; results = "hidden"
import Pkg
Pkg.add("Weave")

using Pkg
Pkg.activate(".")
Pkg.instantiate()
```

# Problem 1

## Problem 1.1
```julia; echo = true
function square_number(x)
    output = x^2
    return output
end
```

## Problem 1.2
The equation `j square_number(5)` outputs the same result at $5^2.


## Problem 1.3
```julia; echo = true
import Pkg
Pkg.add("Plots")

y = square_number

using Plots
plot(y, -10, 10, ylabel = "x^2", xlabel = "x")
```

# Problem 2

## Problem 2.1
To find $/sqrt{x}$as a, Newton's method approximates the answer by
repeating guesses on value a with a function f. $/sqrt{x}$ must lie between
x/a.


## Problem 2.2
```julia; echo = true
function newton_sqrt(x, a)
  root = ((x/a) + x)/2
	while abs(root-a) > 0.01
    if abs(root-a) <= 0.01
      a = root
    else
      abs(root-a) > 0.1
      root = 0.5*(x+(a/x))
    end
  end
  return a
end
```



# Problem 3

## Problem 3.1
```julia; echo = true
a = rand(20)
```

## Problem 3.2
```julia; echo = true
function mean(vect) 
  sum = 0
  for i in a
    sum += i
  end
  return sum / length(a)
end

function demean(vect)
  b = vect 
  for i in 1:length(vect)
    b[i] -= mean(vect)
  end
  return b
end
```

## Problem 3.3
```julia; echo = true
vector = [0, 0, 1, 1, 1, 1, 1, 1, 0, 0]
```

## Problem 3.4
```julia; echo = true
matrix = rand(5, 5)
```
# Problem 4

## Problem 4.1
```julia; echo = true
import Pkg
Pkg.activate(".")
Pkg.instantiate()
Pkg.add("Distributions")

using Distributions

my_logNormal_dist = LogNormal(log(0.03), 0.005)
rand(my_logNormal_dist, 100)

## Problem 4.2


## Problem 4.3

# References
